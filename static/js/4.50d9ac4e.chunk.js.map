{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialogs.jsx","hoc/AuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","maxLength10","maxLengthCreator","Friend","props","path","num","className","s","friend","active","to","name","Messege","messege","text","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","id","messegesElements","messeges","m","dialogItems","user","values","alert","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessage","addPostMessageCreator","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,QAAU,yBAAyB,KAAO,wB,+HCOxMC,EAAcC,YAAiB,IAE7BC,EAAS,SAACC,GACZ,IAAIC,EAAO,YAAcD,EAAME,IAC/B,OACA,yBAAKC,UAAaC,IAAEC,OAAS,IAAMD,IAAEE,QACjC,kBAAC,IAAD,CAASC,GAAMN,GAAf,IAAuBD,EAAMQ,KAA7B,OAKFC,EAAU,SAACT,GACb,OACI,yBAAKG,UAAcC,IAAEM,SAAUV,EAAMW,OAyCvCC,EAAmBC,YAAU,CAACC,KAAM,WAAjBD,EAXL,SAACb,GACjB,OACI,0BAAMe,SAAYf,EAAMgB,cACpB,kBAACC,EAAA,EAAD,CAAOC,UAAaC,IAAWC,SAAY,CAACC,IAAUxB,GAC9CW,KAAO,iBAAiBc,YAAc,uBAC9C,sDASGC,EAxCC,SAACvB,GACb,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAQrB,KAAQqB,EAAErB,KAAMsB,IAAOD,EAAEE,GAAI7B,IAAO2B,EAAEE,QACxFC,EAAmBR,EAAMS,SAASL,KAAK,SAAAM,GAAC,OAAI,kBAAC,EAAD,CAASJ,IAAOI,EAAEH,GAAIpB,KAAQuB,EAAEvB,UAKhF,OACI,yBAAKR,UAAaC,IAAEuB,SAChB,yBAAKxB,UAAaC,IAAE+B,aAChBT,GAEJ,yBAAKvB,UAAaC,IAAE6B,UACfD,EACD,yBAAM7B,UAAaC,IAAEgC,MACzB,kBAACxB,EAAD,CAAkBG,SAXT,SAACsB,GACdC,MAAMD,EAAOE,uB,wDC5BjBC,EAA6B,SAAChB,GAAD,MAAY,CACzCiB,OAAQjB,EAAMkB,KAAKD,S,QCkBRE,sBACXC,aAhBkB,SAACpB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACoB,GACtB,MAAM,CACFC,YAAa,WACTD,EAASE,qBDRW,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAIC,KAAKlD,MAAMyC,OAER,kBAACO,EAAcE,KAAKlD,OAFI,kBAAC,IAAD,CAAUO,GAAK,eAHX,GACX4C,IAAMH,WAYtC,OAHqCJ,YAAQJ,EAARI,CAAoCK,KCK9DN,CAGbpB","file":"static/js/4.50d9ac4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2yx2t\",\"dialogItems\":\"Dialogs_dialogItems__KZAzP\",\"active\":\"Dialogs_active__3hebL\",\"friend\":\"Dialogs_friend__3N2UL\",\"messege\":\"Dialogs_messege__2PobP\",\"user\":\"Dialogs_user__3AElr\"};","import React from 'react';\r\nimport s from'./Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {addPostMessageCreator} from './../../redux/dialogs-reducer';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { Textarea } from '../common/FormsControls/FormsControl';\r\nimport { required, maxLengthCreator } from '../../utilts/validators/validators';\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst Friend = (props) => {\r\n    let path = \"/dialogs/\" + props.num;\r\n    return(\r\n    <div className = {s.friend + ' ' + s.active}>        \r\n        <NavLink to = {path}> {props.name} </NavLink> \r\n    </div>\r\n    )\r\n}\r\n\r\nconst Messege = (props) => {\r\n    return(\r\n        <div className =  {s.messege}>{props.text}</div>\r\n    );\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage; \r\n\r\n    let dialogsElements = state.dialogs.map( d => <Friend name = {d.name} key = {d.id} num = {d.id} /> );\r\n    let messegesElements = state.messeges.map( m => <Messege key = {m.id} text = {m.text}  /> );\r\n    \r\n    let addMessege = (values) => {\r\n        alert(values.newMessageBody);\r\n    }\r\n    return (\r\n        <div className = {s.dialogs}>\r\n            <div className = {s.dialogItems}>\r\n               {dialogsElements}                                \r\n            </div>\r\n            <div className = {s.messeges}>\r\n                {messegesElements} \r\n                <div  className = {s.user} >\r\n            <DialogsReduxForm onSubmit = {addMessege} />\r\n            </div>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit = {props.handleSubmit}>\r\n            <Field component = {Textarea}  validate = {[required, maxLength10]} \r\n                    name = 'newMessageBody' placeholder = 'Enter the messege:'/>\r\n            <button> Send messege </button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({form: 'dialogs'})(DialogsForm)\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return  <Redirect to = '/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n  \r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport {addPostMessageCreator} from './../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { compose } from '../../../../../../Users/Alina/AppData/Local/Microsoft/TypeScript/3.6/node_modules/redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sendMessage: () => {\r\n            dispatch(addPostMessageCreator());\r\n        }\r\n    };   \r\n\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect    \r\n)(Dialogs);;"],"sourceRoot":""}